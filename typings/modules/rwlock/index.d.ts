// Generated by typings
// Source: https://raw.githubusercontent.com/CaselIT/typings-rwlock/98f6480d8f7b185d4e1afe099725ee6b81699806/lock.d.ts
declare module 'rwlock' {
// Type definitions for RWLock 5.0.0
// Project: https://github.com/71104/rwlock
// Definitions by: Federico Caselli <https://github.com/CaselIT/typings-rwlock>

class ReadWriteGeneric<T> {
  readLock(callback: T, options?: ReadWriteLock.Options): void;
  readLock(key: string, callback: T, options?: ReadWriteLock.Options): void;
  writeLock(callback: T, options?: ReadWriteLock.Options): void;
  writeLock(key: string, callback: T, options?: ReadWriteLock.Options): void;
}

namespace ReadWriteLock {
  interface Release {
    (): void;
  }

  interface Callback {
    (release: Release): void;
  }

  interface AsyncCallback {
    (err: Error, release: Release): void;
  }

  interface Options {
    scope?: any;
    timeout?: number;
    timeoutCallback?: () => void;
  }
}

class ReadWriteLock extends ReadWriteGeneric<ReadWriteLock.Callback>{
  constructor();
  async: ReadWriteGeneric<ReadWriteLock.AsyncCallback>;
}

export = ReadWriteLock;
}
